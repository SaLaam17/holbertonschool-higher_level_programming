#description
'matrix_divided(matrix, div)': Return a new matrix where div divides all elements of the given matrix.

#Import
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Example usage:
# base case
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# 0 div case
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# case with float div
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 1.5)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

# matrix not being list of lists
>>> matrix_divided([1, 2, 3], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# different row sizes
>>> matrix = [
... [1, 2, 3],
... [4, 5]
... ]
>>> matrix_divided(matrix, 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# matrix containing incorrect types
>>> matrix = [
... [1, 2, 3],
... ["four", 5, 6]
... ]
>>> matrix_divided(matrix, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# div being a string
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, "three")
Traceback (most recent call last):
    ...
TypeError: div must be a number
